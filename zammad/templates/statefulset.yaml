apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "zammad.fullname" . }}
  labels:
    {{- include "zammad.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "zammad.name" . }}
  selector:
    matchLabels:
      {{- include "zammad.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zammad.labels" . | nindent 8 }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "zammad.serviceAccountName" . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
{{- with .Values.initContainers }}
{{- toYaml . | nindent 8}}
{{- end }}
        {{- if .Values.volumePermissions.enabled }}
        - name: data-chmod
          image: "{{ .Values.volumePermissions.image.repository }}:{{ .Values.volumePermissions.image.tag }}"
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy }}
          command:
            - /bin/sh
            - -cx
            - |
              chown 1000:1000 -R /opt/zammad
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          {{- with .Values.zammadConfig.initContainers.volumePermissions.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ template "zammad.fullname" . }}
              mountPath: /opt/zammad
        {{- end }}
        - name: zammad-init
          image: {{ .Values.image.repository }}:{{ template "zammad.image.repositoryPrefix" . }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if or .Values.zammadConfig.redis.pass .Values.secrets.redis.useExisting }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.redisSecretName" . }}
                  key: {{ .Values.secrets.redis.secretKey }}
          {{- end }}
            - name: MEMCACHE_SERVERS
              value: "{{ if .Values.zammadConfig.memcached.enabled }}{{ .Release.Name }}-memcached{{ else }}{{ .Values.zammadConfig.memcached.host }}{{ end }}:{{ .Values.zammadConfig.memcached.port }}"
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@{{ if .Values.zammadConfig.redis.enabled }}{{ .Release.Name }}-redis-master{{ else }}{{ .Values.zammadConfig.redis.host }}{{ end }}:{{ .Values.zammadConfig.redis.port }}"
          {{- if .Values.autoWizard.enabled }}
            - name: AUTOWIZARD_JSON
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.autowizardSecretName" . }}
                  key: {{ .Values.secrets.autowizard.secretKey }}
          {{- end }}
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          {{- with .Values.zammadConfig.initContainers.zammad.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ template "zammad.fullname" . }}
              mountPath: /opt/zammad
            - name: {{ template "zammad.fullname" . }}-init
              mountPath: /docker-entrypoint.sh
              readOnly: true
              subPath: zammad-init
        - name: postgresql-init
          image: {{ .Values.image.repository }}:{{ template "zammad.image.repositoryPrefix" . }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          env:
          {{- if or .Values.zammadConfig.redis.pass .Values.secrets.redis.useExisting }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.redisSecretName" . }}
                  key: {{ .Values.secrets.redis.secretKey }}
          {{- end }}
            - name: MEMCACHE_SERVERS
              value: "{{ if .Values.zammadConfig.memcached.enabled }}{{ .Release.Name }}-memcached{{ else }}{{ .Values.zammadConfig.memcached.host }}{{ end }}:{{ .Values.zammadConfig.memcached.port }}"
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@{{ if .Values.zammadConfig.redis.enabled }}{{ .Release.Name }}-redis-master{{ else }}{{ .Values.zammadConfig.redis.host }}{{ end }}:{{ .Values.zammadConfig.redis.port }}"
            - name: POSTGRESQL_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.postgresqlSecretName" . }}
                  key: {{ .Values.secrets.postgresql.secretKey }}
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.initContainers.postgresql.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: {{ template "zammad.fullname" . }}
            mountPath: /opt/zammad
          - name: {{ template "zammad.fullname" . }}-init
            mountPath: /docker-entrypoint.sh
            readOnly: true
            subPath: postgresql-init
        {{- if .Values.zammadConfig.elasticsearch.initialisation }}
        - name: elasticsearch-init
          image: {{ .Values.image.repository }}:{{ template "zammad.image.repositoryPrefix" . }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          env:
          {{- if or .Values.zammadConfig.redis.pass .Values.secrets.redis.useExisting }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.redisSecretName" . }}
                  key: {{ .Values.secrets.redis.secretKey }}
          {{- end }}
            - name: MEMCACHE_SERVERS
              value: "{{ if .Values.zammadConfig.memcached.enabled }}{{ .Release.Name }}-memcached{{ else }}{{ .Values.zammadConfig.memcached.host }}{{ end }}:{{ .Values.zammadConfig.memcached.port }}"
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@{{ if .Values.zammadConfig.redis.enabled }}{{ .Release.Name }}-redis-master{{ else }}{{ .Values.zammadConfig.redis.host }}{{ end }}:{{ .Values.zammadConfig.redis.port }}"
          {{- if or .Values.zammadConfig.elasticsearch.pass .Values.secrets.elasticsearch.useExisting }}
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.elasticsearchSecretName" . }}
                  key: {{ .Values.secrets.elasticsearch.secretKey }}
          {{- end }}
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.initContainers.elasticsearch.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: {{ template "zammad.fullname" . }}
            mountPath: /opt/zammad
          - name: {{ template "zammad.fullname" . }}-init
            mountPath: /docker-entrypoint.sh
            readOnly: true
            subPath: elasticsearch-init
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}-nginx
          image: {{ .Values.image.repository }}:{{ include "zammad.image.repositoryPrefix" . }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/sbin/nginx
            - -g
            - 'daemon off;'
          env:
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: {{ include "zammad.fullname" . }}
              mountPath: /opt/zammad
            - name: {{ include "zammad.fullname" . }}-nginx
              mountPath: /etc/nginx/sites-enabled
          {{- with .Values.zammadConfig.nginx.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.nginx.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.nginx.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: {{ .Chart.Name }}-railsserver
          image: {{ .Values.image.repository }}:{{ include "zammad.image.repositoryPrefix" . }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          command:
            - "bundle"
            - "exec"
            - "puma"
            - "-b"
            - "tcp://[::]:3000"
            - "-w"
            - "{{ .Values.zammadConfig.railsserver.webConcurrency }}"
            - "-e"
            - "production"
          env:
          {{- if or .Values.zammadConfig.redis.pass .Values.secrets.redis.useExisting }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.redisSecretName" . }}
                  key: {{ .Values.secrets.redis.secretKey }}
          {{- end }}
            - name: MEMCACHE_SERVERS
              value: "{{ if .Values.zammadConfig.memcached.enabled }}{{ .Release.Name }}-memcached{{ else }}{{ .Values.zammadConfig.memcached.host }}{{ end }}:{{ .Values.zammadConfig.memcached.port }}"
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@{{ if .Values.zammadConfig.redis.enabled }}{{ .Release.Name }}-redis-master{{ else }}{{ .Values.zammadConfig.redis.host }}{{ end }}:{{ .Values.zammadConfig.redis.port }}"
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          ports:
            - name: railsserver
              containerPort: 3000
          volumeMounts:
            - name: {{ template "zammad.fullname" . }}
              mountPath: /opt/zammad
          {{- with .Values.zammadConfig.railsserver.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.railsserver.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.railsserver.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: {{ .Chart.Name }}-scheduler
          image: {{ .Values.image.repository }}:{{ include "zammad.image.repositoryPrefix" . }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          command:
            - "bundle"
            - "exec"
            - "script/background-worker.rb"
            - "start"
          env:
          {{- if or .Values.zammadConfig.redis.pass .Values.secrets.redis.useExisting }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.redisSecretName" . }}
                  key: {{ .Values.secrets.redis.secretKey }}
          {{- end }}
            - name: MEMCACHE_SERVERS
              value: "{{ if .Values.zammadConfig.memcached.enabled }}{{ .Release.Name }}-memcached{{ else }}{{ .Values.zammadConfig.memcached.host }}{{ end }}:{{ .Values.zammadConfig.memcached.port }}"
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@{{ if .Values.zammadConfig.redis.enabled }}{{ .Release.Name }}-redis-master{{ else }}{{ .Values.zammadConfig.redis.host }}{{ end }}:{{ .Values.zammadConfig.redis.port }}"
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ template "zammad.fullname" . }}
              mountPath: /opt/zammad
          {{- with .Values.zammadConfig.scheduler.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: {{ .Chart.Name }}-websocket
          image: {{ .Values.image.repository }}:{{ include "zammad.image.repositoryPrefix" . }}{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          command:
            - "bundle"
            - "exec"
            - "script/websocket-server.rb"
            - "-b"
            - "0.0.0.0"
            - "-p"
            - "6042"
            - "start"
          env:
          {{- if or .Values.zammadConfig.redis.pass .Values.secrets.redis.useExisting }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "zammad.redisSecretName" . }}
                  key: {{ .Values.secrets.redis.secretKey }}
          {{- end }}
            - name: MEMCACHE_SERVERS
              value: "{{ if .Values.zammadConfig.memcached.enabled }}{{ .Release.Name }}-memcached{{ else }}{{ .Values.zammadConfig.memcached.host }}{{ end }}:{{ .Values.zammadConfig.memcached.port }}"
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@{{ if .Values.zammadConfig.redis.enabled }}{{ .Release.Name }}-redis-master{{ else }}{{ .Values.zammadConfig.redis.host }}{{ end }}:{{ .Values.zammadConfig.redis.port }}"          
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          ports:
            - name: websocket
              containerPort: 6042
          volumeMounts:
            - name: {{ template "zammad.fullname" . }}
              mountPath: /opt/zammad
          {{- with .Values.zammadConfig.websocket.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.websocket.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.zammadConfig.websocket.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- with .Values.sidecars }}
{{- toYaml . | nindent 8}}
{{- end }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
        - name: {{ template "zammad.fullname" . }}-nginx
          configMap:
            name: {{ template "zammad.fullname" . }}-nginx
        - name: {{ template "zammad.fullname" . }}-init
          configMap:
            name: {{ template "zammad.fullname" . }}-init
            defaultMode: 0755
  {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: {{ template "zammad.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "zammad.fullname" .) }}
  {{- else if not .Values.persistence.enabled }}
      - name: {{ template "zammad.fullname" . }}
        emptyDir: {}
  {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: {{ template "zammad.fullname" . }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
        {{- end }}
  {{- end }}
