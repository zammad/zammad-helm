apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "zammad.fullname" . }}
  labels:
    {{- include "zammad.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "zammad.name" . }}
  selector:
    matchLabels:
      {{- include "zammad.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zammad.labels" . | nindent 8 }}
    spec:
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.image.imagePullSecrets | nindent 6 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "zammad.serviceAccountName" . }}
      {{- end }}
      initContainers:
      {{- if .Values.volumePermissions.enabled }}
      - name: data-chmod
        image: "{{ .Values.volumePermissions.image.repository }}:{{ .Values.volumePermissions.image.tag }}"
        imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy }}
        command:
        - /bin/sh
        - -cx
        - |
          chown 1000:1000 -R /opt/zammad
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - name: {{ template "zammad.fullname" . }}
          mountPath: /opt/zammad
      {{- end }}
      - name: zammad-init
        image: {{ .Values.image.repository }}:{{if eq .Values.image.repository "zammad/zammad-docker-compose"}}zammad-{{ end }}{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          {{ if .Values.autoWizard.enabled }}
          - name: "AUTOWIZARD_JSON"
            valueFrom:
              secretKeyRef:
                name: {{ template "zammad.autowizardSecretName" . }}
                key: {{ .Values.secrets.autowizard.secretKey }}
          {{ end }}
          {{- range $key, $value := .Values.extraEnv }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
        - name: {{ template "zammad.fullname" . }}
          mountPath: /opt/zammad
        - name: {{ template "zammad.fullname" . }}-init
          mountPath: /docker-entrypoint.sh
          readOnly: true
          subPath: zammad-init
      - name: postgresql-init
        image: {{ .Values.image.repository }}:{{if eq .Values.image.repository "zammad/zammad-docker-compose"}}zammad-{{ end }}{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        env:
          - name: "POSTGRESQL_PASS"
            valueFrom:
              secretKeyRef:
                name: {{ template "zammad.postgresqlSecretName" . }}
                key: {{ .Values.secrets.postgresql.secretKey }}
          {{- range $key, $value := .Values.extraEnv }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        volumeMounts:
        - name: {{ template "zammad.fullname" . }}
          mountPath: /opt/zammad
        - name: {{ template "zammad.fullname" . }}-init
          mountPath: /docker-entrypoint.sh
          readOnly: true
          subPath: postgresql-init
      {{ if .Values.elasticsearch.enableInitialisation }}
      - name: elasticsearch-init
        image: {{ .Values.image.repository }}:{{if eq .Values.image.repository "zammad/zammad-docker-compose"}}zammad-{{ end }}{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        env:
          {{ if or .Values.envConfig.elasticsearch.pass .Values.secrets.elasticsearch.useExisting }}
          - name: "ELASTICSEARCH_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ template "zammad.elasticsearchSecretName" . }}
                key: {{ .Values.secrets.elasticsearch.secretKey }}
          {{ end }}
          {{- range $key, $value := .Values.extraEnv }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        volumeMounts:
        - name: {{ template "zammad.fullname" . }}
          mountPath: /opt/zammad
        - name: {{ template "zammad.fullname" . }}-init
          mountPath: /docker-entrypoint.sh
          readOnly: true
          subPath: elasticsearch-init
      {{ end }}
      containers:
      - name: {{ .Chart.Name }}-nginx
        image: {{ .Values.image.repository }}:{{if eq .Values.image.repository "zammad/zammad-docker-compose"}}zammad-{{ end }}{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - /usr/sbin/nginx
          - -g
          - 'daemon off;'
        env:
          {{- range $key, $value := .Values.extraEnv }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        ports:
        - name: http
          containerPort: 8080
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
        - name: {{ template "zammad.fullname" . }}
          mountPath: /opt/zammad
        - name: {{ template "zammad.fullname" . }}-nginx
          mountPath: /etc/nginx/sites-enabled
        {{- if .Values.healthchecks.nginx.livenessProbe.enabled }}
        {{- with .Values.healthchecks.nginx.livenessProbe -}}
        livenessProbe:
          {{- . | indent 10 -}}
        {{- end }}
        {{- if .Values.healthchecks.nginx.readinessProbe.enabled }}
        {{- with .Values.healthchecks.nginx.readinessProbe -}}
        readinessProbe:
          {{- . | indent 10 -}}
        {{- end }}
        resources:
{{ toYaml .Values.resources.nginx | indent 10 }}
      - name: {{ .Chart.Name }}-railsserver
        image: {{ .Values.image.repository }}:{{if eq .Values.image.repository "zammad/zammad-docker-compose"}}zammad-{{ end }}{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        command:
          - "bundle"
          - "exec"
          - "rails"
          - "server"
          - "puma"
          - "-b"
          - "[::]"
          - "-p"
          - "3000"
          - "-e"
          - "production"
        env:
          {{- range $key, $value := .Values.extraEnv }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        ports:
        - name: railsserver
          containerPort: 3000
        volumeMounts:
         - name: {{ template "zammad.fullname" . }}
           mountPath: /opt/zammad
        {{- if .Values.healthchecks.railsserver.livenessProbe.enabled }}
        {{- with .Values.healthchecks.railsserver.livenessProbe -}}
        livenessProbe:
          {{- . | indent 10 -}}
        {{- end }}
        {{- if .Values.healthchecks.railsserver.readinessProbe.enabled }}
        {{- with .Values.healthchecks.railsserver.readinessProbe -}}
        readinessProbe:
          {{- . | indent 10 -}}
        {{- end }}
        resources:
{{ toYaml .Values.resources.railsserver | indent 10 }}
      - name: {{ .Chart.Name }}-scheduler
        image: {{ .Values.image.repository }}:{{if eq .Values.image.repository "zammad/zammad-docker-compose"}}zammad-{{ end }}{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        command:
          - "bundle"
          - "exec"
          - "script/scheduler.rb"
          - "run"
        env:
          {{- range $key, $value := .Values.extraEnv }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        volumeMounts:
         - name: {{ template "zammad.fullname" . }}
           mountPath: /opt/zammad
        resources:
{{ toYaml .Values.resources.scheduler | indent 10 }}
      - name: {{ .Chart.Name }}-websocket
        image: {{ .Values.image.repository }}:{{if eq .Values.image.repository "zammad/zammad-docker-compose"}}zammad-{{ end }}{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        command:
          - "bundle"
          - "exec"
          - "script/websocket-server.rb"
          - "-b"
          - "0.0.0.0"
          - "-p"
          - "6042"
          - "start"
        env:
          {{- range $key, $value := .Values.extraEnv }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
        ports:
        - name: websocket
          containerPort: 6042
        volumeMounts:
        - name: {{ template "zammad.fullname" . }}
          mountPath: /opt/zammad
        {{- if .Values.healthchecks.websocket.livenessProbe.enabled }}
        {{- with .Values.healthchecks.websocket.livenessProbe -}}
        livenessProbe:
          {{- . | indent 10 -}}
        {{- end }}
        {{- if .Values.healthchecks.websocket.readinessProbe.enabled }}
        {{- with .Values.healthchecks.websocket.readinessProbe -}}
        readinessProbe:
          {{- . | indent 10 -}}
        {{- end }}
        resources:
{{ toYaml .Values.resources.websocket | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
      - name: {{ template "zammad.fullname" . }}-nginx
        configMap:
          name: {{ template "zammad.fullname" . }}-nginx
      - name: {{ template "zammad.fullname" . }}-init
        configMap:
          name: {{ template "zammad.fullname" . }}-init
          defaultMode: 0755
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
      - name: {{ template "zammad.fullname" . }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "zammad.fullname" .) }}
{{- else if not .Values.persistence.enabled }}
      - name: {{ template "zammad.fullname" . }}
        emptyDir: {}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "zammad.fullname" . }}
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      {{- with .Values.persistence.storageClass }}
      storageClassName: "{{ . }}"
      {{- end }}
{{- end }}
